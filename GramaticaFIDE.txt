OPERACION ::= OPERACION_LOGICA | OPERACION_RELACIONAL | OPERACION_ARITMETICA
OPERACION_LOGICA ::= O
O ::= O OR X | X
X ::= X XOR A | A 
A ::= A AND N | N 
N ::= NOT N | Y
Y ::= OPERACION_RELACIONAL | (O)

OPERACION_RELACIONAL ::= OPERACION_ARITMETICA RELACION OPERACION_RELACIONAL
                        | OPERACION_ARITMETICA
                        | (OPERACION_RELACIONAL)
RELACION ::= > | < | >= | <= | == | != 

OPERACION_ARITMETICA ::= C 
C ::= C + D | C - D | D
D ::= D * F | D / F | F
F ::= G ^ F | G 
G ::= VALOR | ( C )

// Valor puede ser un numero, id, llamada a metodo, cadena, valor booleano...

UNIDAD_COMPILACION ::= IMPORTACION DECLARACION_CLASE

DECLARACION_CLASE ::= VISIBILIDAD.opt 'Clase' NOMBRE aint CUERPO_CLASE cint 

IMPORTACION ::= 'Importar' NOMBRE fin

VISIBILIDAD ::= 'publico' | 'privado'

DECLARACION_VARIABLE ::= VISIBILIDAD.opt 'var' NOMBRES 
NOMBRES ::= LNOMBRESA | LNOMBRES
LNOMBRES ::= LNOMBRES cma NOMBRE | NOMBRE
LNOMBRESA ::= LNOMBRES cma NOMBRE ASIGNAR | NOMBRE ASIGNAR

ASIGNAR ::= '=' OPERACION
 
ASIGNACION_VARIABLE ::= NOMBRE '=' OPERACION 
ASIG_SIMPLIFICADA ::= AUMENTO | DECREMENTO
AUMENTO ::= DATO '+''+'
DECREMENTO ::= DATO '-''-'
DATO ::= ENTERO | DECIMAL | CARACTER

DECLARACION_ARREGLO ::= VISIBILIDAD.opt 'var' TIPO 'arreglo' LNOMBRES DIMENSIONES ASIGNAR_ARREGLO
DIMENSIONES ::= [OPERACION_ARITMETICA]
                | [OPERACION_ARITMETICA] [OPERACION_ARITMETICA]
                | [OPERACION_ARITMETICA] [OPERACION_ARITMETICA] [OPERACION_ARITMETICA]

ASIGNAR_ARREGLO ::= '=' {OPERACION}
                | '=' {OPERACION} {OPERACION}
                | '=' {OPERACION} {OPERACION} {OPERACION}

ASIGNACION_ARREGLO ::= NOMBRE DIMENSIONES '=' OPERACION

SI ::= 'si' ( CONDICION ) aint CUERPO_CONTROL cint MAS_SI SINO 
CONDICION ::= OPERACION_LOGICA
MAS_SI ::= MAS_SI SINO_SI | EPS 
SINO ::= 'sino' aint CUERPO_CONTROL cint
        | EPS
SINO_SI ::= 'sino' 'si' ( CONDICION ) aint CUERPO_CONTROL cint SINO

PARA ::= 'para' (D_A ptocma CONDICION ptocma ACCION_POST) aint CUERPO_CONTROL cint 
D_A ::= DECLARACION_VARIABLE | ASIGNACION_VARIABLE 
ACCION_POST ::= ASIGNACION_VARIABLE | ASIG_SIMPLIFICADA

MIENTRAS ::= 'mientras' (CONDICION) aint CUERPO_CONTROL cint 

HACER_MIENTRAS ::= 'hacer' aint CUERPO_CONTROL cint 'mientras' ( CONDICION )

FUNMET ::= VISIBILIDAD.opt TIPO.opt NOMBRE ( PARAMETROS_FM ) aint CUERPO_FM RETORNO.opt cint
PARAMETROS_FM ::= LPARAMETROS_FM | EPS 
LPARAMETROS_FM ::= LPARAMETROS_FM cma PARAMETRO_FM | PARAMETRO_FM
PARAMETRO_FM ::= TIPO NOMBRE
RETORNO ::= 'retorna' OPERACION

CUERPO_CLASE ::= SENTENCIAS_C
SENTENCIAS_C ::= SENTENCIAS_C SENTENCIA_C 
                | 
SENTENCIA_C ::= SENT_DECLARACION
                | SENT_ASIGNACION
                | SENT_FUNCION

CUERPO_FM ::= SENTENCIAS_FM
SENTENCIAS_FM ::= SENTENCIAS_FM SENTENCIA_FM
                | 
SENTENCIA_FM ::= SENT_DECLARACION
                | SENT_ASIGNACION
                | SENT_CONTROL
                | LLAMA_MET
                | RETORNO

CUERPO_CONTROL ::= SENTENCIAS_CO
SENTENCIAS_CO := SENT_DECLARACION
                | SENT_ASIGNACION
                | SENT_CONTROL
                | LLAMA_MET
                | SALIDA
                | RETORNO